name: Auto Publish Website # 自动部署的名称
on:
  push
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 运行环境，告诉它运行在什么环境
    steps: # 步骤

    # 第一步：下载源码（CI/CD拉取代码到自己的本地）
    - name: Checkout
      uses: actions/checkout@main
      
    # 删除realse有问题  
    - name: Remove Release
      uses: actions/checkout@main
      with:
          delete_release: true # default: false
          tag_name: refs/heads/main # tag name to delete
          repo: https://github.com/kiaser/hexodemo # target repo (optional). defaults to repo running this action
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    # 第二步：打包构建
    - name: Build
      uses: actions/setup-node@master
    - run:  npm install
    - run:  npm install -g hexo
    - run:  hexo g
    - run: tar -zcvf release.tgz public
    # 把dist等文件，打包压缩为release.tgz

    # 第三步：发布 Release
    - name: Create Release # 创建Release，可以在仓库看到一个个版本
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }} # 之前GitHub添加的Token
      with:
        tag_name: ${{ github.ref }} # (tag)标签名称
        release_name: Release ${{ github.ref }}
        draft: false # 是否是草稿
        prerelease: false # 是否是预发布

    # 第四步：上传构建结果到 Release（把打包的tgz上传到Release）
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@master
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
        asset_path: ./release.tgz # 要上传文件
        asset_name: release.tgz # 上传后的文件名
        asset_content_type: application/x-tgz
        
         # 第五步：部署到服务器
    - name: Deploy
      uses: appleboy/ssh-action@master # 使用ssh链接服务器
      with:
        host: ${{ secrets.HOST }} #配置的服务器地址
        username: ${{ secrets.USERNAME }} #配置的服务器用户名
        password: ${{ secrets.PASSWORD }} #配置的密码
        port: ${{ secrets.PORT }} #配置的端口
        script: | # 执行命令（运行到服务器）cd：要确保服务器有这个目录； wget：下载上一步的release到服务器； tar：解压； 安装依赖；启动服务
          cd /usr/src/hexo-upload
          wget https://github.com/kiaser/hexodemo/releases/latest/download/release.tgz -O release.tgz
          tar zxvf release.tgz
          yes | cp -r -f public/* ./
          docker rm -f kiaserblog
          docker rmi -f kiaserblog:latest
          docker build -t kiaserblog:latest .
          docker run --name kiaserblog -p 8082:80 -d kiaserblog:latest
